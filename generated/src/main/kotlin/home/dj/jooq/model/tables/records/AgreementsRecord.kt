/*
 * This file is generated by jOOQ.
 */
package home.dj.jooq.model.tables.records


import home.dj.jooq.model.tables.Agreements

import java.math.BigDecimal
import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record13
import org.jooq.Row13
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class AgreementsRecord() : UpdatableRecordImpl<AgreementsRecord>(Agreements.AGREEMENTS), Record13<Int?, LocalDateTime?, LocalDateTime?, Int?, Int?, BigDecimal?, String?, BigDecimal?, String?, Int?, LocalDateTime?, LocalDateTime?, String?> {

    var id: Int?
        set(value) = set(0, value)
        get() = get(0) as Int?

    var startDate: LocalDateTime?
        set(value) = set(1, value)
        get() = get(1) as LocalDateTime?

    var endDate: LocalDateTime?
        set(value) = set(2, value)
        get() = get(2) as LocalDateTime?

    var tenantId: Int?
        set(value) = set(3, value)
        get() = get(3) as Int?

    var landlordId: Int?
        set(value) = set(4, value)
        get() = get(4) as Int?

    var rentAmount: BigDecimal?
        set(value) = set(5, value)
        get() = get(5) as BigDecimal?

    var rentCurrency: String?
        set(value) = set(6, value)
        get() = get(6) as String?

    var utilityAmount: BigDecimal?
        set(value) = set(7, value)
        get() = get(7) as BigDecimal?

    var utilityCurrency: String?
        set(value) = set(8, value)
        get() = get(8) as String?

    var milestoneDay: Int?
        set(value) = set(9, value)
        get() = get(9) as Int?

    var createdAt: LocalDateTime?
        set(value) = set(10, value)
        get() = get(10) as LocalDateTime?

    var updatedAt: LocalDateTime?
        set(value) = set(11, value)
        get() = get(11) as LocalDateTime?

    var createdBy: String?
        set(value) = set(12, value)
        get() = get(12) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row13<Int?, LocalDateTime?, LocalDateTime?, Int?, Int?, BigDecimal?, String?, BigDecimal?, String?, Int?, LocalDateTime?, LocalDateTime?, String?> = super.fieldsRow() as Row13<Int?, LocalDateTime?, LocalDateTime?, Int?, Int?, BigDecimal?, String?, BigDecimal?, String?, Int?, LocalDateTime?, LocalDateTime?, String?>
    override fun valuesRow(): Row13<Int?, LocalDateTime?, LocalDateTime?, Int?, Int?, BigDecimal?, String?, BigDecimal?, String?, Int?, LocalDateTime?, LocalDateTime?, String?> = super.valuesRow() as Row13<Int?, LocalDateTime?, LocalDateTime?, Int?, Int?, BigDecimal?, String?, BigDecimal?, String?, Int?, LocalDateTime?, LocalDateTime?, String?>
    override fun field1(): Field<Int?> = Agreements.AGREEMENTS.ID
    override fun field2(): Field<LocalDateTime?> = Agreements.AGREEMENTS.START_DATE
    override fun field3(): Field<LocalDateTime?> = Agreements.AGREEMENTS.END_DATE
    override fun field4(): Field<Int?> = Agreements.AGREEMENTS.TENANT_ID
    override fun field5(): Field<Int?> = Agreements.AGREEMENTS.LANDLORD_ID
    override fun field6(): Field<BigDecimal?> = Agreements.AGREEMENTS.RENT_AMOUNT
    override fun field7(): Field<String?> = Agreements.AGREEMENTS.RENT_CURRENCY
    override fun field8(): Field<BigDecimal?> = Agreements.AGREEMENTS.UTILITY_AMOUNT
    override fun field9(): Field<String?> = Agreements.AGREEMENTS.UTILITY_CURRENCY
    override fun field10(): Field<Int?> = Agreements.AGREEMENTS.MILESTONE_DAY
    override fun field11(): Field<LocalDateTime?> = Agreements.AGREEMENTS.CREATED_AT
    override fun field12(): Field<LocalDateTime?> = Agreements.AGREEMENTS.UPDATED_AT
    override fun field13(): Field<String?> = Agreements.AGREEMENTS.CREATED_BY
    override fun component1(): Int? = id
    override fun component2(): LocalDateTime? = startDate
    override fun component3(): LocalDateTime? = endDate
    override fun component4(): Int? = tenantId
    override fun component5(): Int? = landlordId
    override fun component6(): BigDecimal? = rentAmount
    override fun component7(): String? = rentCurrency
    override fun component8(): BigDecimal? = utilityAmount
    override fun component9(): String? = utilityCurrency
    override fun component10(): Int? = milestoneDay
    override fun component11(): LocalDateTime? = createdAt
    override fun component12(): LocalDateTime? = updatedAt
    override fun component13(): String? = createdBy
    override fun value1(): Int? = id
    override fun value2(): LocalDateTime? = startDate
    override fun value3(): LocalDateTime? = endDate
    override fun value4(): Int? = tenantId
    override fun value5(): Int? = landlordId
    override fun value6(): BigDecimal? = rentAmount
    override fun value7(): String? = rentCurrency
    override fun value8(): BigDecimal? = utilityAmount
    override fun value9(): String? = utilityCurrency
    override fun value10(): Int? = milestoneDay
    override fun value11(): LocalDateTime? = createdAt
    override fun value12(): LocalDateTime? = updatedAt
    override fun value13(): String? = createdBy

    override fun value1(value: Int?): AgreementsRecord {
        this.id = value
        return this
    }

    override fun value2(value: LocalDateTime?): AgreementsRecord {
        this.startDate = value
        return this
    }

    override fun value3(value: LocalDateTime?): AgreementsRecord {
        this.endDate = value
        return this
    }

    override fun value4(value: Int?): AgreementsRecord {
        this.tenantId = value
        return this
    }

    override fun value5(value: Int?): AgreementsRecord {
        this.landlordId = value
        return this
    }

    override fun value6(value: BigDecimal?): AgreementsRecord {
        this.rentAmount = value
        return this
    }

    override fun value7(value: String?): AgreementsRecord {
        this.rentCurrency = value
        return this
    }

    override fun value8(value: BigDecimal?): AgreementsRecord {
        this.utilityAmount = value
        return this
    }

    override fun value9(value: String?): AgreementsRecord {
        this.utilityCurrency = value
        return this
    }

    override fun value10(value: Int?): AgreementsRecord {
        this.milestoneDay = value
        return this
    }

    override fun value11(value: LocalDateTime?): AgreementsRecord {
        this.createdAt = value
        return this
    }

    override fun value12(value: LocalDateTime?): AgreementsRecord {
        this.updatedAt = value
        return this
    }

    override fun value13(value: String?): AgreementsRecord {
        this.createdBy = value
        return this
    }

    override fun values(value1: Int?, value2: LocalDateTime?, value3: LocalDateTime?, value4: Int?, value5: Int?, value6: BigDecimal?, value7: String?, value8: BigDecimal?, value9: String?, value10: Int?, value11: LocalDateTime?, value12: LocalDateTime?, value13: String?): AgreementsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        return this
    }

    /**
     * Create a detached, initialised AgreementsRecord
     */
    constructor(id: Int? = null, startDate: LocalDateTime? = null, endDate: LocalDateTime? = null, tenantId: Int? = null, landlordId: Int? = null, rentAmount: BigDecimal? = null, rentCurrency: String? = null, utilityAmount: BigDecimal? = null, utilityCurrency: String? = null, milestoneDay: Int? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null, createdBy: String? = null): this() {
        this.id = id
        this.startDate = startDate
        this.endDate = endDate
        this.tenantId = tenantId
        this.landlordId = landlordId
        this.rentAmount = rentAmount
        this.rentCurrency = rentCurrency
        this.utilityAmount = utilityAmount
        this.utilityCurrency = utilityCurrency
        this.milestoneDay = milestoneDay
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        this.createdBy = createdBy
    }
}
